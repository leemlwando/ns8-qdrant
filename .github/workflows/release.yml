name: Create release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and push images
        env:
          REPOBASE: ghcr.io/${{ github.repository_owner }}
          IMAGETAG: v${{ steps.version.outputs.version }}
          CI: 1
        run: |
          # Install buildah
          sudo apt-get update
          sudo apt-get install -y buildah

          # Login to registry
          echo "${{ secrets.GITHUB_TOKEN }}" | buildah login --username ${{ github.actor }} --password-stdin ghcr.io

          # Make build script executable and run
          chmod +x build-images.sh
          ./build-images.sh

          # Push with version tag
          for image in $(echo "$images" | tr ' ' '\n'); do
            buildah push "$image" "docker://$image:v${{ steps.version.outputs.version }}"
            buildah push "$image" "docker://$image:latest"
          done

      - name: Generate changelog
        id: changelog
        run: |
          # Generate a simple changelog from commits since last tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [[ -n "$PREVIOUS_TAG" ]]; then
            echo "## Changes since $PREVIOUS_TAG" > CHANGELOG.md
            git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> CHANGELOG.md
          else
            echo "## Initial Release" > CHANGELOG.md
            echo "First release of NS8 Qdrant module" >> CHANGELOG.md
          fi
          
          echo "## Installation" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo '```bash' >> CHANGELOG.md
          echo "add-module ghcr.io/${{ github.repository_owner }}/ns8-qdrant:v${{ steps.version.outputs.version }} 1" >> CHANGELOG.md
          echo '```' >> CHANGELOG.md

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release v${{ steps.version.outputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false