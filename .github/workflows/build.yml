name: Build and Publish NS8 Qdrant Module

on:
  push:
    branches: [main, master]
    tags: ['v*']
  pull_request:
    branches: [main, master]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: leemlwando/ns8-qdrant

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.0
          
      - name: Build UI
        run: |
          cd ui
          pnpm install
          pnpm run build

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up build environment
        run: |
          # Install buildah
          sudo apt-get update
          sudo apt-get install -y buildah

      - name: Build module image
        id: build
        env:
          REPOBASE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          IMAGETAG: ${{ github.ref_name != 'main' && github.ref_name != 'master' && github.sha || 'latest' }}
          CI: 1
        run: |
          # Make build script executable
          chmod +x build-images.sh
          
          # Run the build script
          ./build-images.sh
          
          # Output the image name for later steps  
          echo "image=$REPOBASE/ns8-qdrant" >> $GITHUB_OUTPUT
          echo "tag=$IMAGETAG" >> $GITHUB_OUTPUT

      - name: Push to registry
        if: github.event_name != 'pull_request'
        env:
          IMAGE: ${{ steps.build.outputs.image }}
          TAG: ${{ steps.build.outputs.tag }}
        run: |
          # Push the image with the computed tag
          buildah push "$IMAGE" "docker://$IMAGE:$TAG"
          
          # Push the latest tag only for main/master branch
          if [[ "${{ github.ref_name }}" == "main" || "${{ github.ref_name }}" == "master" ]]; then
            buildah push "$IMAGE" "docker://$IMAGE:latest"
          fi
          
          # Push version tags
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            buildah push "$IMAGE" "docker://$IMAGE:${{ github.ref_name }}"
          fi

      - name: Generate summary
        if: github.event_name != 'pull_request'
        env:
          IMAGE: ${{ steps.build.outputs.image }}
          TAG: ${{ steps.build.outputs.tag }}
        run: |
          echo "## ðŸš€ NS8 Qdrant Module Build Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image**: \`$IMAGE:$TAG\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Installation Command:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "add-module $IMAGE:$TAG 1" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Available on:" >> $GITHUB_STEP_SUMMARY
          echo "- \`$IMAGE:$TAG\`" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.ref_name }}" == "main" || "${{ github.ref_name }}" == "master" ]]; then
            echo "- \`$IMAGE:latest\`" >> $GITHUB_STEP_SUMMARY
          fi