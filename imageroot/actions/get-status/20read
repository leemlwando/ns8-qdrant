#!/usr/bin/env python3

#
# Copyright (C) 2025 Lee M. Lwando
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import subprocess
import os

# Get systemd service status
try:
    result = subprocess.run(['systemctl', '--user', 'is-active', 'qdrant.service'], 
                          capture_output=True, text=True)
    if result.returncode == 0:
        status = "active"
    else:
        status = "inactive"
except subprocess.SubprocessError:
    status = "unknown"

# Get enabled status
try:
    result = subprocess.run(['systemctl', '--user', 'is-enabled', 'qdrant.service'], 
                          capture_output=True, text=True)
    if result.returncode == 0:
        enabled = "enabled"
    else:
        enabled = "disabled"
except subprocess.SubprocessError:
    enabled = "unknown"

# Get configuration for port information
http_port = 6333
grpc_port = 6334

config_file = 'config/module_config.json'
if os.path.exists(config_file):
    try:
        with open(config_file, 'r') as f:
            config = json.load(f)
            http_port = config.get('http_port', 6333)
            grpc_port = config.get('grpc_port', 6334)
    except (json.JSONDecodeError, IOError):
        pass

# Output status information
status_info = {
    "status": status,
    "enabled": enabled,
    "http_port": http_port,
    "grpc_port": grpc_port
}

json.dump(status_info, fp=sys.stdout)
