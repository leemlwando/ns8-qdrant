#!/usr/bin/env python3

#
# Copyright (C) 2025 Lee M. Lwando
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import os

# Parse input from stdin
request = json.load(sys.stdin)

# Set default environment variables for Qdrant
agent.set_env('HTTP_PORT', '6333')
agent.set_env('GRPC_PORT', '6334')
agent.set_env('QDRANT_IMAGE', 'qdrant/qdrant:latest')
agent.set_env('LOG_LEVEL', 'INFO')
agent.set_env('STORAGE_PATH', './data')

# Create necessary directories
os.makedirs('config', exist_ok=True)
os.makedirs('data', exist_ok=True)
os.makedirs('snapshots', exist_ok=True)

# Create default Qdrant configuration as YAML string
default_config_yaml = """log_level: INFO
storage:
  storage_path: ./data
  snapshots_path: ./snapshots
  wal_capacity_mb: 32
  wal_segments_ahead: 0
service:
  http_port: 6333
  grpc_port: 6334
  enable_cors: true
  max_request_size_mb: 32
  max_workers: 0
  host: 0.0.0.0
cluster:
  enabled: false
telemetry:
  disabled: true"""

# Write default configuration file
with open('config/production.yaml', 'w') as f:
    f.write(default_config_yaml)

# Store module configuration for get-configuration action
module_config = {
    'http_port': 6333,
    'grpc_port': 6334,
    'api_key': '',
    'log_level': 'INFO',
    'storage_path': './data'
}

with open('config/module_config.json', 'w') as f:
    json.dump(module_config, f, indent=2)

print("Qdrant module created successfully")
